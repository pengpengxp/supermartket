# -*- word-wrap: nil; -*-
#+OPTIONS: ^:{}
#+STARTUP: content
#+STARTUP: align
#+STARUP: hideblocks


* 模块介绍
** 初始化
  从 =price.txt= 中获取没钱赚超市每样商品的价格、打折信息等。其中每行
  表示一种商品，不能重复，不能有空行。可以按照需要修改和添加商品信息。

  这就是整个价格表与是否打折等信息，其中type最后一位（二进制）为1表示
  95折(DISCOUNT)，倒数第二位为1表示买二送一(GIFT)，均为0表示普通商品
  (COMMON)
  |------------+----------+-------+------+------------|
  | Id         | Name     | Price | Type | quantifier |
  |------------+----------+-------+------+------------|
  | ITEM000001 | 可口可乐 |  3.00 | 0x01 | 瓶         |
  | ITEM000002 | 羽手球   |  1.00 | 0x10 | 个         |
  | ITEM000003 | 苹果     |  5.00 | 0x00 | 斤         |
  | ITEM000004 | 梨       |  3.50 | 0x00 | 斤         |
  | ITEM000005 | 裤子     |    49 | 0x11 | 条         |
  |------------+----------+-------+------+------------|
** 如何使用
  本模块由C语言写成，使用makefile管理工程。编译可直接在当前目录 =make=
  即可。建议在Mac或Linux下执行编译。
  
  模块由标准输入中获取数据。把输入存入文件中重定向是一种方便的方法。
  
  执行 =./supermarket < input.txt= 程序就可以根据 =input.txt= 文件中的
  输入信息计算并打印出结果。
  
  也可以直接运行程序 =./supermarket= ，然后手动输入，最后 =Ctrl+D= 结
  束即可。

** 测试
   我自己在testinput目录下写了几个模拟的input，然后用本目录下的
   =test.sh= 脚本来执行测试。可以直接执行 =./test.sh= 即可。
** [[https://github.com/pengpengxp/supermartket][github地址在这里]]
* todo
  1. [X] gift计算方法不对。
  2. [X] 还需要总计。
  3. [X] gift还需要特殊输出。
  4. [X] 输入还需要提升，不应该写死到代码中。把对应商品的价格、打折信
     息等写入到文件中，程序直接从文件中读取。
  5. [X] 输入还有点小问题，没有量词。
  6. [X] 换了输入方式后，type判断不出来了，修改WhichType实现。
  7. [X] Check一下链表的使用有没有问题。
  8. [X] 错误处理：输入中有错，程序中运行有错。

